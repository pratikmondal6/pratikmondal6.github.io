---
import { siteConfig } from "../config";
const hasProjects = siteConfig.projects && siteConfig.projects.length > 0;

// Enhanced project data with very light, subtle colors
const projectData = [
  {
    ...siteConfig.projects[0], // AI-Powered Knowledge Graph
    name: "AI Knowledge Graph",
    description: "LLM + Neo4j system analyzing research papers with automated entity extraction and visualization.",
    category: "Machine Learning",
    status: "Completed",
    color: "#619E7E", // Fraunhofer green (research context)
    bgColor: "from-emerald-50/20 to-green-50/15",
    borderColor: "border-gray-100",
    shadowColor: "97, 158, 126",
    icon: "ðŸ¤–",
    impact: "1000+ Papers",
    skills: ["Python", "Neo4j", "LLM"]
  },
  {
    ...siteConfig.projects[1], // Farmbot â€“ Digital Agriculture
    name: "Farmbot Agriculture",
    description: "AI-powered IoT system with automated seeding, irrigation, and real-time soil monitoring.",
    category: "IoT & AI",
    status: "Live",
    color: "#56863F", // Greenable green (agriculture/sustainability theme)
    bgColor: "from-green-50/20 to-lime-50/15",
    borderColor: "border-gray-100",
    shadowColor: "86, 134, 63",
    icon: "ðŸŒ±",
    impact: "Automated",
    skills: ["Node.js", "ReactJS", "IoT"]
  },
  {
    ...siteConfig.projects[2], // Shongjog â€“ Emergency Service
    name: "Emergency Service Platform",
    description: "Enterprise emergency services mapping platform delivering improved user engagement.",
    category: "Enterprise",
    status: "Production",
    color: "#0A2D59", // Brac IT navy (Brac project)
    bgColor: "from-blue-50/20 to-slate-50/15",
    borderColor: "border-gray-100",
    shadowColor: "10, 45, 89",
    icon: "ðŸš¨",
    impact: "+40% MAU",
    skills: ["Java", "Spring", "Angular"]
  },
  {
    ...siteConfig.projects[3], // Smart Farming Compliance Tool
    name: "Compliance Analytics",
    description: "Smart farming compliance solution with field-specific guidance and regulatory automation.",
    category: "Analytics",
    status: "Active",
    color: "#094882", // Porsche blue (enterprise collaboration)
    bgColor: "from-sky-50/20 to-blue-50/15",
    borderColor: "border-gray-100",
    shadowColor: "9, 72, 130",
    icon: "ðŸ“Š",
    impact: "50% Less Work",
    skills: ["Java", "Spring Boot", "GeoBox"]
  }
];

// Status indicator colors
const statusColors: Record<string, string> = {
  "Completed": "#10B981",
  "Live": "#059669", 
  "Production": "#0891B2",
  "Active": "#7C3AED"
};
---

{
  hasProjects && (
    <section id="projects" class="p-8 sm:p-12 md:p-16 lg:p-24 relative overflow-hidden">
      <!-- Background decoration -->
      <div class="absolute inset-0 opacity-5">
        <div class="absolute top-32 left-16 w-48 h-48 bg-blue-400 rounded-full blur-3xl"></div>
        <div class="absolute bottom-24 right-20 w-36 h-36 bg-green-400 rounded-full blur-3xl"></div>
      </div>
      
      <div class="relative">
        <div class="grid grid-cols-1 lg:grid-cols-12 gap-8 lg:gap-16 items-start">
          <div class="lg:col-span-4">
            <h2 class="text-3xl sm:text-4xl md:text-5xl xl:text-7xl font-bold text-gray-900">
              Projects
            </h2>
            <div
              class="w-[75px] h-[5px] mt-2 rounded-full"
              style={`background-color: ${siteConfig.accentColor}`}
            />
            
            <!-- Project domain pills -->
            <div class="mt-6 flex flex-wrap gap-3">
              <div class="group px-4 py-2 bg-white/60 backdrop-blur-sm border border-gray-200 rounded-full text-sm font-medium text-gray-700 transition-all duration-300 hover:bg-white hover:shadow-md hover:scale-105 cursor-default"
                   style="border-color: #619E7E30">
                <div class="flex items-center gap-2">
                  <div class="w-2 h-2 rounded-full" style="background-color: #619E7E"></div>
                  <span>AI & ML</span>
                </div>
              </div>
              
              <div class="group px-4 py-2 bg-white/60 backdrop-blur-sm border border-gray-200 rounded-full text-sm font-medium text-gray-700 transition-all duration-300 hover:bg-white hover:shadow-md hover:scale-105 cursor-default"
                   style="border-color: #56863F30">
                <div class="flex items-center gap-2">
                  <div class="w-2 h-2 rounded-full" style="background-color: #56863F"></div>
                  <span>IoT Systems</span>
                </div>
              </div>
              
              <div class="group px-4 py-2 bg-white/60 backdrop-blur-sm border border-gray-200 rounded-full text-sm font-medium text-gray-700 transition-all duration-300 hover:bg-white hover:shadow-md hover:scale-105 cursor-default"
                   style="border-color: #0A2D5930">
                <div class="flex items-center gap-2">
                  <div class="w-2 h-2 rounded-full" style="background-color: #0A2D59"></div>
                  <span>Enterprise</span>
                </div>
              </div>
            </div>
          </div>

          <div class="lg:col-span-8">
            <div class="grid grid-cols-1 xl:grid-cols-2 gap-6">
              {projectData.map((project, index) => {
                const Component = project.link ? "a" : "div";
                const linkProps = project.link
                  ? {
                      href: project.link,
                      target: "_blank",
                      rel: "noopener noreferrer",
                    }
                  : {};

                return (
                  <div class="group relative">
                    <div class="absolute inset-0 bg-gradient-to-r rounded-xl blur-xl opacity-5 group-hover:opacity-10 transition-opacity duration-500"
                         style={`background-color: ${project.color}`}></div>
                    
                    <Component
                      {...linkProps}
                      class={`relative flex flex-col bg-gradient-to-br ${project.bgColor} rounded-xl border ${project.borderColor} p-5 transition-all duration-500 group-hover:-translate-y-1 group-hover:scale-[1.01] overflow-hidden`}
                      style={`box-shadow: 0 4px 6px rgba(${project.shadowColor}, 0.1), 0 2px 4px rgba(${project.shadowColor}, 0.06)`}
                    >
                      {/* Simplified header section */}
                      <div class="flex items-start justify-between mb-4">
                        <div class="flex items-center gap-3">
                          <div class="w-12 h-12 rounded-xl bg-white/90 backdrop-blur-sm border flex items-center justify-center shadow-sm group-hover:scale-110 transition-transform duration-300"
                               style={`border-color: ${project.color}20`}>
                            <span class="text-xl">{project.icon}</span>
                          </div>
                          <div>
                            <div class="text-xs font-semibold uppercase tracking-wide" style={`color: ${project.color}`}>
                              {project.category}
                            </div>
                            <div class="text-lg font-bold text-gray-900 leading-tight">
                              {project.impact}
                            </div>
                          </div>
                        </div>
                        
                        {/* Status and link */}
                        <div class="flex items-center gap-2">
                          <div class="flex items-center gap-1.5 px-2 py-1 bg-white/80 backdrop-blur-sm rounded-md text-xs font-medium border"
                               style={`color: ${statusColors[project.status]}; border-color: ${statusColors[project.status]}20`}>
                            <div class="w-1.5 h-1.5 rounded-full" style={`background-color: ${statusColors[project.status]}`}></div>
                            {project.status}
                          </div>
                          
                          {project.link && (
                            <div class="w-8 h-8 flex items-center justify-center bg-gray-900 rounded-lg text-white transition-all duration-300 group-hover:bg-gray-700 group-hover:scale-110">
                              <svg class="w-4 h-4 transition-transform duration-300 group-hover:translate-x-0.5 group-hover:-translate-y-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 17L17 7M17 7H7M17 7V17"/>
                              </svg>
                            </div>
                          )}
                        </div>
                      </div>

                      {/* Compact project content */}
                      <div class="space-y-3">
                        <h3 class="text-lg font-bold text-gray-900 leading-tight">
                          {project.name}
                        </h3>
                        <p class="text-sm text-gray-700 leading-relaxed">
                          {project.description}
                        </p>

                        {/* Skills section without extra spacing */}
                        {project.skills && project.skills.length > 0 && (
                          <div class="pt-3 border-t border-gray-100/50">
                            <div class="flex flex-wrap gap-1.5">
                              {project.skills.slice(0, 3).map((skill) => (
                                <span class="px-2 py-1 bg-white/90 backdrop-blur-sm text-gray-700 rounded-md text-xs font-medium border transition-all duration-300"
                                      style={`border-color: ${project.color}20; color: ${project.color}`}>
                                  {skill}
                                </span>
                              ))}
                              {project.skills.length > 3 && (
                                <span class="px-2 py-1 bg-gray-100 text-gray-500 rounded-md text-xs font-medium">
                                  +{project.skills.length - 3}
                                </span>
                              )}
                            </div>
                          </div>
                        )}
                      </div>
                      
                      {/* Very subtle decorative corner accent */}
                      <div class="absolute bottom-0 right-0 w-12 h-12 opacity-5 group-hover:opacity-10 transition-opacity duration-300">
                        <div class="absolute bottom-3 right-3 w-6 h-6 rounded-full" style={`background-color: ${project.color}`}></div>
                      </div>
                    </Component>
                  </div>
                );
              })}
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}
