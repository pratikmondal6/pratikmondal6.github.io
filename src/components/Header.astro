---
import { siteConfig } from "../config";

const hasProjects = siteConfig.projects && siteConfig.projects.length > 0;
const hasExperience = siteConfig.experience && siteConfig.experience.length > 0;
const hasEducation = siteConfig.education && siteConfig.education.length > 0;
const hasSkillsAndExpertise = siteConfig.skillsAndExpertise;
const hasAchievements = siteConfig.achievements && siteConfig.achievements.length > 0;
---

<header
  id="header"
  class="fixed top-0 left-0 right-0 z-50 hidden md:block transition-all duration-300"
>
  <div class="relative">
    <!-- Background Pattern -->
    <div class="absolute inset-0 bg-gradient-to-r from-white via-gray-50 to-white"></div>
    <div class="absolute top-0 left-0 right-0 h-px bg-gradient-to-r from-transparent via-gray-300 to-transparent"></div>
    
    <nav class="relative max-w-6xl mx-auto px-6 py-4">
      <div class="flex items-center justify-between">
        
        <!-- Left: Brand Mark -->
        <div class="flex items-center space-x-4">
          <div class="relative group cursor-pointer brand-logo">
            <div class="absolute -inset-2 bg-gradient-to-r from-blue-600 to-purple-600 rounded-xl blur opacity-25 group-hover:opacity-40 transition duration-300"></div>
            <div 
              class="relative px-4 py-2 bg-white rounded-xl border-2 shadow-lg hover:shadow-xl transition-all duration-200"
              style={`border-color: ${siteConfig.accentColor}`}
            >
              <span class="font-bold text-lg tracking-tight" style={`color: ${siteConfig.accentColor}`}>
                {siteConfig.name.split(' ').map(word => word[0]).join('')}
              </span>
            </div>
          </div>
          <div class="hidden xl:block cursor-pointer brand-text">
            <div class="border-l-2 border-gray-300 pl-4 hover:opacity-80 transition-opacity duration-200">
              <p class="text-sm font-medium text-gray-900">{siteConfig.name.split(' ')[0]}</p>
              <p class="text-xs text-gray-500 -mt-0.5">Portfolio</p>
            </div>
          </div>
        </div>

        <!-- Center: Navigation Tabs -->
        <div class="hidden lg:flex">
          <div class="flex items-center bg-white rounded-xl border border-gray-200 shadow-sm p-1">
            <a
              href="#about"
              class="nav-item px-4 py-2 text-sm font-medium text-gray-600 hover:text-gray-900 rounded-lg transition-all duration-200 hover:bg-gray-50"
            >
              About
            </a>
            {
              hasExperience && (
                <a
                  href="#experience"
                  class="nav-item px-4 py-2 text-sm font-medium text-gray-600 hover:text-gray-900 rounded-lg transition-all duration-200 hover:bg-gray-50"
                >
                  Work
                </a>
              )
            }
            {
              hasAchievements && (
                <a
                  href="#achievements"
                  class="nav-item px-4 py-2 text-sm font-medium text-gray-600 hover:text-gray-900 rounded-lg transition-all duration-200 hover:bg-gray-50"
                >
                  Awards
                </a>
              )
            }
            {
              hasSkillsAndExpertise && (
                <a
                  href="#skillsandexpertise"
                  class="nav-item px-4 py-2 text-sm font-medium text-gray-600 hover:text-gray-900 rounded-lg transition-all duration-200 hover:bg-gray-50"
                >
                  Skills
                </a>
              )
            }
            {
              hasProjects && (
                <a
                  href="#projects"
                  class="nav-item px-4 py-2 text-sm font-medium text-gray-600 hover:text-gray-900 rounded-lg transition-all duration-200 hover:bg-gray-50"
                >
                  Projects
                </a>
              )
            }
            {
              hasEducation && (
                <a
                  href="#education"
                  class="nav-item px-4 py-2 text-sm font-medium text-gray-600 hover:text-gray-900 rounded-lg transition-all duration-200 hover:bg-gray-50"
                >
                  Education
                </a>
              )
            }
          </div>
        </div>

        <!-- Right: Action Buttons -->
        <div class="flex items-center space-x-3">
          <a
            href={siteConfig.social.github}
            target="_blank"
            rel="noopener noreferrer"
            class="hidden lg:flex items-center justify-center w-10 h-10 rounded-xl bg-gray-100 hover:bg-gray-200 transition-colors duration-200"
          >
            <svg class="w-5 h-5 text-gray-700" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
            </svg>
          </a>
          <a
            href={siteConfig.social.linkedin}
            target="_blank"
            rel="noopener noreferrer"
            class="hidden lg:flex items-center justify-center w-10 h-10 rounded-xl bg-gray-100 hover:bg-gray-200 transition-colors duration-200"
          >
            <svg class="w-5 h-5 text-gray-700" fill="currentColor" viewBox="0 0 24 24">
              <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
            </svg>
          </a>
          <a
            href={`mailto:${siteConfig.social.email}`}
            class="flex items-center space-x-2 px-5 py-2.5 text-white text-sm font-medium rounded-xl transition-all duration-200 hover:shadow-lg hover:scale-105"
            style={`background-color: ${siteConfig.accentColor}`}
          >
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
            </svg>
            <span class="hidden sm:inline">Connect Me</span>
          </a>
        </div>
      </div>
    </nav>
    
    <!-- Bottom Border -->
    <div class="absolute bottom-0 left-0 right-0 h-px bg-gradient-to-r from-transparent via-gray-200 to-transparent"></div>
  </div>
</header>

<script>
  // Add click event listeners for scroll to top
  document.addEventListener('DOMContentLoaded', function() {
    const brandLogo = document.querySelector('.brand-logo');
    const brandText = document.querySelector('.brand-text');
    
    function scrollToTop() {
      window.scrollTo({
        top: 0,
        behavior: 'smooth'
      });
    }
    
    if (brandLogo) {
      brandLogo.addEventListener('click', scrollToTop);
    }
    
    if (brandText) {
      brandText.addEventListener('click', scrollToTop);
    }
  });

  window.addEventListener("scroll", () => {
    const header = document.getElementById("header");
    if (window.scrollY > 50) {
      header?.classList.add("backdrop-blur-md", "shadow-lg");
      header?.style.setProperty('background', 'rgba(255, 255, 255, 0.9)');
    } else {
      header?.classList.remove("backdrop-blur-md", "shadow-lg");
      header?.style.removeProperty('background');
    }
  });

  // Active navigation highlighting with accent color
  const sections = document.querySelectorAll('section[id]') as NodeListOf<HTMLElement>;
  const navItems = document.querySelectorAll('.nav-item') as NodeListOf<HTMLAnchorElement>;
  const accentColor = document.documentElement.style.getPropertyValue('--accent-color') || '#1d4ed8';

  window.addEventListener('scroll', () => {
    let current = '';
    sections.forEach(section => {
      const sectionTop = section.offsetTop;
      if (window.scrollY >= (sectionTop - 150)) {
        current = section.getAttribute('id') || '';
      }
    });

    navItems.forEach(link => {
      // Reset all nav items to default state
      link.style.backgroundColor = '';
      link.style.color = '';
      link.style.transform = '';
      link.style.boxShadow = '';
      
      if (link.getAttribute('href') === `#${current}`) {
        // Apply accent color background and white text for active section
        link.style.backgroundColor = '#1d4ed8';
        link.style.color = 'white';
        link.style.transform = 'scale(1.05)';
        link.style.boxShadow = '0 4px 12px rgba(29, 78, 216, 0.25)';
      }
    });
  });
</script>

<style>
  html {
    scroll-behavior: smooth;
  }
</style>
